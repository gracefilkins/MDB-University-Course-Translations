大家好！ 在此视频中, 您将学习有关索引。 我们将讨论索引是什么, 它们如何改进性能以及 使用这些索引的成本。 我们还会查看最常见的索引类型。 

索引是特殊的数据结构, 它以易于遍历和高效搜索的 有序格式存储一小部分集合数据。 索引指向文档标识, 并允许您更快地查找, 访问和更新数据。 在MongoDB中使用索引来提高查询性能。 它们可以加快查询速度, 减少磁盘 I/O, 并减少查询所需的资源。 

索引还支持查询, 例如, 平等匹配和范围型的操作, 并返回排序结果。 索引根据创建索引时提供的索引字段和值排序顺序, 索引以有序格式存储数据。 没有索引, MongoDB必须通过执行集合扫描来读取集合中 的每个文档, 以检查它是否与正在运行的查询匹配。 如果查询需要排序输出, 那么还需要对内存中的结果进行排序。 

使用索引时, MongoDB仅根据查询访存索引标识的文档, 并更快地返回结果。 如果索引包含查询要检索的所有信息, MongoDB需要读取该文档。 默认情况下, 每个集合只创建一个索引。 此默认索引仅包含_id字段。 每个查询都应该使用索引。 这样, 您可以在您的集合中创建其它索引以覆盖您数据查询。 

请注意, 索引具有写入性能的成本。 当我们在集合中插入新文档或更新它们中的索引字段时, 我们还需要更新索引结构中的数据。 另外, 如果集合中的索引过多, 那么写入性能也会降低。 因此, 我们需要确保我们拥有的索引都被使用。 否则, 我们应该删除不必要的或冗余的索引。 

现在我们已经介绍了建立索引的基础, 让我们进入MongoDB中最常见的索引类型 -- 单个字段索引和复合索引。 单个字段索引仅是一个字段的索引。 复合索引包含索引中的多个字段。 在这两个索引中, 起始字段或索引前缀都可用于支持查询。 如果索引类型在数组字段上运行, 那么这两个索引类型也可以是多键索引。 每个数组条目都有一个对应的索引条目。 

让我们根据针对客户集合运行的查询运行一个示例。 以下是来自此集合的文档的示例。 该集合包含有关客户的信息, 例如用户名, 出生日期, 他们是否是 活跃的, 他们拥有的帐户以及有关帐户的其它详细信息。 假设我们通常会运行这些客户查询来搜索所有活跃且 具有特定帐户的客户。 

在这种情况下, 我们可以定义具有active和accounts字段的 索引, 以提高这些查询的性能。 因为索引有两个字段, 其中一个是数组字段, 它是多键复合 索引。 两个查询都可以使用此索引。 

很棒！ 让我们看看你在这段视频中学到的知识。 索引是有序的数据结构, 用于存储集合中的某些字段 以允许更快的数据检索和减少计算。 索引支持相等匹配和范围型的查询操作并返回排序结果。 但是, 它们具有写入性能成本。 更新或插入索引字段时, 还必须更新相应的索引条目。 MongoDB中最常见的索引类型是单字段索引和复合索引。 在数组字段上运行的索引称为多键索引。 